filter {
    grok {
      match => { "message" => ["^%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:hostname} %{GREEDYDATA:message}$"] }
      overwrite => "message"
    }
    grok {
      match => {
      "message" => [
        #-------------------- SSH -----------------------#
        "^%{WORD:rsyslog_program}\[%{GREEDYDATA}]: %{DATA:ssh_event} for(?: %{DATA:ssh_check_invalid})? %{USER:ssh_username} from %{IP:ssh_ip} port %{NUMBER:ssh_port} ssh2",
        "^%{WORD:rsyslog_program}\[%{GREEDYDATA}]: %{DATA:ssh_event} by authenticating user %{USER:ssh_username} %{IP:ssh_ip} port %{NUMBER:ssh_port} [preauth]",
        "^%{WORD:rsyslog_program}\[%{GREEDYDATA}]: %{DATA:ssh_event} %{WORD:ssh_username} from %{IP:ssh_ip} port %{NUMBER:ssh_port}$",
        #-------------------- Groups --------------------#
        "^%{WORD:rsyslog_program}\[%{GREEDYDATA}]: new group: name=%{WORD:group_name}, GID=%{NUMBER:group_id}",
        "^%{WORD:rsyslog_program}\[%{GREEDYDATA}]: group '%{WORD:group_name}' removed",
        "^%{WORD:rsyslog_program}\[%{GREEDYDATA}]: user %{USER:user} %{WORD:action} by %{USER:by_user} %{GREEDYDATA} group %{WORD:group_name}",
        #-------------------- Users ---------------------#
        "^%{WORD:rsyslog_program}\[%{GREEDYDATA}]: %{DATA:action}: name=%{USER:username}, UID=%{NUMBER:uid}, GID=%{NUMBER:gid}",
        "^%{WORD:rsyslog_program}\[%{GREEDYDATA}]: %{DATA:action} '%{WORD:username}'",
        "^%{WORD:rsyslog_program}\[%{GREEDYDATA}]: %{GREEDYDATA}: %{DATA:action} for %{USER:username}"
      ]
      }
      remove_field => "message"
   }
}

output {
  if "sshd" in [tags] {
  # if tags['rsyslog_server'] == "sshd" {
#  if [type] == "ssh" {
    elasticsearch {
      hosts => [ "https://elasticsearch:9200" ]
      user => "elastic"
      password => "Szh21091992"
      ssl => true
      cacert => "/etc/logstash/http_ca.crt"
      index => "sshd-%{+YYYY.MM.dd}"
    }
  }
}
