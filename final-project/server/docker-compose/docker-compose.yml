version: "3"

services:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.path=/tsdb
    - --web.console.libraries=/usr/share/prometheus/console_libraries
    - --web.console.templates=/usr/share/prometheus/consoles
    volumes:
    - ./prometheus/configs:/etc/prometheus:z
    - ./prometheus/tsdb:/tsdb:z
    - /etc/localtime:/etc/localtime:ro
    - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
    networks:
      - monitoring
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"

  nginx:
    image: nginx:latest
    container_name: nginx
    hostname: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:z
      - ./nginx/proxy.conf:/etc/nginx/conf.d/proxy.conf:z
      - ./nginx/webserver.crt:/etc/nginx/certs/webserver.crt
      - ./nginx/webserver.key:/etc/nginx/certs/webserver.key
      - ./nginx/logs:/var/log/nginx:z
    networks:
      - monitoring
    ports:
    - 443:443
    - 80:80
    # - 8081:8081
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    hostname: grafana
    networks:
      - monitoring
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
      - ./grafana:/var/lib/grafana:z
      - ./grafana/provisioning:/etc/grafana/provisioning:z
    restart: unless-stopped
    environment:
      - TZ="Europe/Moscow"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    container_name: cadvisor
    hostname: cadvisor
    networks:
      - monitoring
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:ro  
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    - /dev/disk/:/dev/disk:ro
    userns_mode: "host"
    privileged: true
    devices:
    - "dev/kmsg"
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager
    hostname: alertmanager
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml:z
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    restart: unless-stopped
    networks:
      monitoring:

  blackbox_exporter:
    image: quay.io/prometheus/blackbox-exporter:latest
    hostname: blackbox
    container_name: blackbox
    ports:
      - 9115:9115
    volumes:
      - ./blackbox/blackbox.yml:/blackbox.yml:z
    command:
      - --config.file=/blackbox.yml
    networks:
      monitoring:
    restart: unless-stopped

  mysql_exporter:
    image: prom/mysqld-exporter
    container_name: mysql-exporter 
    hostname: mysql-exporter
    volumes:
      - ./mysql-exporter/otus-redmine.cnf:/home/my-cnf:z
    command: 
      - --config.my-cnf=/home/my-cnf 
    networks:
      monitoring:

  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx_exporter
    hostname: nginx-exporter
    command:
      - -nginx.scrape-uri=http://nginx/stub_status
    networks:
      monitoring:
    restart: unless-stopped

  apache_exporter:
    image: lusotycoon/apache-exporter
    container_name: apache-exporter
    command: 
      - --scrape_uri=http://otus-redmine/server-status/?auto
    networks:
      monitoring:
    restart: unless-stopped

  elasticsearch01:
    image: elasticsearch:8.8.1
    hostname: elasticsearch
    container_name: elasticsearch
    volumes:
      - ./elastic:/usr/share/elasticsearch/data:z
    environment:
      - node.name=elasticsearch
      - 'ES_JAVA_OPTS=-Xms2g -Xmx2g'
      - bootstrap.memory_lock=true
      - discovery.type=single-node
    ports:
      - 9200:9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      monitoring:

  kibana:
    image: kibana:8.8.1
    container_name: kibana
    hostname: kibana
    networks:
      monitoring:
    ports:
      - 5601:5601

networks:
  monitoring:
